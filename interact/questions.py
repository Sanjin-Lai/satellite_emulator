from interact import validator as vm

# 卫星网络创建相关命令的选择
SATELLITE_NETWORK_RELATED_QUESTION = [
    {
        "type": "list",
        "name": "command",
        "message": "What is the command of your constellation?",
        "choices": [
            "create",
            "stop",
            "remove",
            "continue",
            "inspect",
            "send"
        ]
    }
]

# 区块链创建相关命令的选择
CHAIN_MAKER_RELATED_QUESTION = [
    {
        "type": "list",
        "name": "command",
        "message": "What is the command of your created block chain?",
        "choices": [
            "create",
            "start",
            "stop",
            "remove",
            "inspect",
            # lai xin
            "delete_logs",
            "position_update",
        ]
    }
]

# lai xin
# 选择不同星座规模下，节点的配置文件，使用之前创建好的节点配置文件
CHAIN_MAKER_CONFIG_SELECT_QUESTION = [
    {
        "type": "list",
        "name": "command",
        "message": "Whether to use existed chainmaker config? " + "[2-2 | 6-11 | 7-11 | 8-11]",
        "choices": [
            "yes",
            "no"
        ]
    }
]

# lai xin
CHAIN_MAKER_EXISTED_CONFIG_QUESTION = [
    {
        "type": "list",
        "name": "command",
        "message": "Which chainmaker config you want to select?",
        "choices": [
            "2-2-config",
            "6-11-config",
            "7-11-config",
            "8-11-config",
        ]
    }
]

# 区块链配置文件是否删除的选择
CHAIN_MAKER_CONFIG_DELETE_QUESTION = [
    {
        "type": "list",
        "name": "command",
        "message": "Whether to regenerate the configuration files generated by the chain?",
        "choices": [
            "yes",
            "no"
        ]
    }
]

# 询问用户是否需要继续卫星网络创建相关的程序
PROGRAM_CONTINUE_QUESTION = [
    {
        "type": "list",
        "name": "continue",
        "message": "Continue the program?",
        "choices": [
            "yes",
            "no"
        ]
    }
]

# 询问用户向哪个卫星发送消息, 以及发送的消息
NODE_SELECTION_QUESTION = [
    {
        "type": "input",
        "name": "node",
        "message": "Which node you want to send message to?",
        "default": "normal-node1",
    },
]

SEND_MESSAGE_QUESTION = [
    {
        "type": "input",
        "name": "send_message",
        "message": "input the message: ",
        "default": "hello"
    }
]

# 询问用户是否要继续向某个卫星进行消息的发送
SEND_CONTINUE_QUESTION = [
    {
        "type": "list",
        "name": "continue",
        "message": "Continue send to the satellite?",
        "choices": [
            "yes",
            "no"
        ]
    }
]

# 询问日志监听记录器的问题
KERNEL_LOG_READER_QUESTION = [
    {
        "type": "input",
        "name": "kernel_log_file_path",
        "message": "What's the path of the kernel log file?",
        "default": "/var/log/kern.log"
    },
    {
        "type": "list",
        "name": "remove_or_retain",
        "message": "Do you want to remove or retain the kernel log file?",
        "choices": [
            "Remove",
            "Retain"
        ]
    }, {
        "type": "input",
        "name": "kernel_log_pre_msg",
        "message": "What's the log pre msg of the kernel log file?",
        "default": "[zeusnet's kernel info]:"
    }, {
        "type": "input",
        "name": "interval",
        "message": "What's the modification check interval?",
        "default": "1",
        "validate": vm.FloatValidator
    }
]

# 获取 prepare.sh 的参数
GET_PARAMETERS_OF_PREPARE_SH = [
    {
        "type": "input",
        "name": "node_count",
        "message": "What's the node count of this configuration?",
        'default': "4",
        "validate": vm.IntegerValidator
    },
    {
        "type": "input",
        "name": "p2p_port",
        "message": "What's the start p2p port of each node?",
        "default": "11301",
        "validate": vm.IntegerValidator
    },
    {
        "type": "input",
        "name": "rpc_port",
        "message": "What's the start rpc port of each node?",
        "default": "12301",
        "validate": vm.IntegerValidator
    }
]
